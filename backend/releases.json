{
    "releases": [
        {
            "version": "v21.0.0.0",
            "name": "raspberrypios-p010-hdr-os-image-bookworm-aarch64.img.xz",
            "description": "I am pleased to announce the latest release of HyperHDR v21, which concludes the year-long development and testing cycle of the application:\r\n\r\n- The architecture has been rebuilt once again, this time focusing on further eliminating heavy dependencies from the past. In addition to lower resource consumption, you will definitely notice how much the installers have been slimmed down (they still contain all the necessary dependent components) and the HyperHDR application itself. Our Github CI also supports now lightning-fast builds thanks to use of native Github Action ARM64 runners.\r\n\r\n- The DirectX grabber has been expanded with a multi-monitor mode that also includes re-order displays ability. You no longer have to use external applications to capture a second or third monitor. Do you still use them? So please make sure they provide full acceleration support by the graphics card as HyperHDR does including using pixel & vertex shaders to scale the textures before sending them from the graphics card memory to the computer so as not to block communication resources which can cause for example: performance drops in games. It is also the cheapest and most effective alternative to HDMI grabbers and splitters on Windows x64 platforms such as multimedia miniPCs with N100. All you need for such setups is USB LED driver like Pico with HyperSerialPico.    \r\n<br/>More about DirectX 11 grabber can be found here: https://github.com/awawa-dev/HyperHDR/wiki/DirectX-11-software-grabber\r\n\r\n- Implemented support for Home Assistant lights ( https://github.com/awawa-dev/HyperHDR/wiki/Home-Assistant-lights ) and  experimental direct support for zigbee2mqtt ( https://github.com/awawa-dev/HyperHDR/wiki/Zigbee2MQTT-lights )\r\n\r\n- HyperHDR has been officially included in the LibreELEC distribution! ( https://github.com/LibreELEC/LibreELEC.tv/pull/9761 )\r\n\r\n- Another new feature that I think will be useful for many people is automatic tone mapping. In case you can't control it from outside via the application's API this is the solution for you. Once enabled HyperHDR will analyze the video image and enable it automatically for dark and faded raw HDR signal and disable it when it detects bright SDR image with normal colors.  \r\n<br/> More about automatic tone mapping can be found here: https://github.com/awawa-dev/HyperHDR/wiki/Automatic-tone-mapping\r\n\r\n- In the past, the process of calibrating the grabber's LUT to obtain the best possible colors was quite problematic: to do it, it usually required a PC set. HyperHDR v21 introduces a small revolution here because now all you have to do is play the calibration MP4 file in your favorite player and HyperHDR will take care of the rest. Thanks to this, we calibrate not only the grabber and TV, but also your default video player. HyperHDR was also the first to introduce support for the NV12 codec for flatbuffers, which opened completely new perspectives for the calibration of external systems because standard RGB flatbuffer stream was usually already processed at the source.  \r\n<br/>You can find more about the new LUT calibration using MP4 files here: https://github.com/awawa-dev/HyperHDR/wiki/lut-calibration\r\n<br/>**If you own Elgato HD60X make sure you read it \u26a0\ufe0f \u21d2** https://github.com/awawa-dev/HyperHDR/discussions/1010\r\n\r\n- I am also pleased to announce for the first time support for the 10-bit P010 codec, which is already appearing in increasingly cheaper grabbers such as the UGreen 25173 (which can only gain in attractiveness after what happened with ELgato HD60X, more: https://github.com/awawa-dev/HyperHDR/discussions/1010). While it does not contribute much to SDR signals, it changes the situation a lot when it comes to HDR by expanding the default narrow bandwidth range above the standard 8-bits, minimizing the quantization effect. Another advantage is that it is usually a raw signal not damaged by the grabber trying to process the HDR signal as SDR. The format is supported by default by Windows, and when it comes to Linux, I created a patch for the UVC module so that it also works on this system.  \r\n<br/>The HyperHDR SD image already has a patch for P010. Note that it is based on the newer Bookworm so configuring wifi via wpa_supplicant will no longer work: for this you need to use the Raspberry PI imager installer (https://github.com/raspberrypi/bookworm-feedback/issues/72). For Raspberry Pi 3b and Zero 2W users, I would like to remind you about a bug in the Raspberry Pi kernel that can cause incorrect display of colors on Bookworm (https://github.com/awawa-dev/HyperHDR/discussions/848).  \r\n<br/>More about support for the P010 format can be found here: https://github.com/awawa-dev/HyperHDR/wiki/p010-video-format\r\n\r\nFull changelog:\r\n- support for ZSTD compression for all LUT files (#1062). More: https://github.com/awawa-dev/HyperHDR/wiki/lut-calibration#support-for-zstd-compressed-lut\r\n- support for Home Assistant lights (#1014). More: https://github.com/awawa-dev/HyperHDR/wiki/Home-Assistant-lights\r\n- experimental direct support for zigbee2mqtt (#1024). More: https://github.com/awawa-dev/HyperHDR/wiki/Zigbee2MQTT-lights\r\n- lightning-fast builds: use native Github Action ARM runners (#1057)\r\n- Windows DirectX grabber: feature to re-order displays in multi-display mode (#1023) \r\n- windows: fix suspend & power off handling (#1039)\r\n- pipewire drm workaround fix (#1029) Thanks @dankmolot \r\n- update language file's (#1017, #1026) Thanks @AstaRom\r\n- SD image supports P010 via DKMS module. Thanks @BayLee4\r\n- Automatic tone mapping (#998)\r\n- Add Ubuntu 24.10 and Fedora 41 (#1001)\r\n- Add support for \"unicam image\" RPi HDMI capture card and UYVY format (#889)\r\n- Breaking change: remove LUT from installer and create it dynamically (#994)\r\n- Fix macOS 15 dark theme menu icons (#988)\r\n- Add P010 HDR10 video format support (#968)\r\n- DirectX multi-monitor support (#966)\r\n- macOS 15 sequoia: migrate to ScreenCaptureKit (#984)\r\n- Add Skydimo support (#985)\r\n- New LUT calibration based on mp4 test videos (part I) (#896)\r\n- feat: updated rpi_ws281x submodule, thanks @andreasvikke (#974)\r\n- DX grabber: stick to user specified device selection (#961)\r\n- Fix LED colors adjustments by configuration name (#956)\r\n- Add autoresume feature for the macOS software grabber (#879)\r\n- Add NV12 image format support for flatbuffers (#920)\r\n- Update language file's Thanks @AstaRom (#883, #923, #998)\r\n- Update flatbuffers to v24.3.25 (#875)\r\n- Add cache_cleaner for Github Action (#910)\r\n- New build.sh script for the HyperHDR build process (#904)\r\n- Remove Alsa libs from CMake recipe\r\n- Remove more unnecessary libraries from installers\r\n- Remove libasound from installers\r\n- Fix restoring calibration settings (#874)\r\n- Reorganize HyperHDR libs (#887)\r\n- Fix macOS image alignment (#838)\r\n- Remove hyperhdr-remote app. Reason: #856\r\n- Refactoring of the FlatBuffers client and server (#880)\r\n- Remove mbedtls. Use OpenSSL (#877)\r\n- Removal of QT SQL. Migrate to the SQLite library. (#872)\r\n- New smoothing option for sound effects, fix ArchLinux installer, refactoring of the smoothing module and music effects (#871)\r\n- Removal of QT D-Bus, switch to sdbus-cpp (#864)\r\n- Dependency reductions: removal of heavy QT Gui lib (#861)\r\n- Fix DirectX capturing after new Systray changes\r\n- New independed systray. Dependency reductions thanks to removal of QWidget (#852)\r\n- Fix: lut calibration for grabberless builds (#840)",
            "published_at": "2025-03-09T12:25:44Z",
            "assets": [
                {
                    "name": "HyperHDR-21.0.0.0-Linux-aarch64.deb",
                    "size": 12804660,
                    "download_count": 516,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v21.0.0.0/HyperHDR-21.0.0.0-Linux-aarch64.deb",
                    "created_at": "2025-03-09T10:39:51Z",
                    "updated_at": "2025-03-09T10:39:52Z"
                },
                {
                    "name": "HyperHDR-21.0.0.0.bookworm-aarch64.deb",
                    "size": 13447824,
                    "download_count": 77,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v21.0.0.0/HyperHDR-21.0.0.0.bookworm-aarch64.deb",
                    "created_at": "2025-03-09T10:39:51Z",
                    "updated_at": "2025-03-09T10:39:52Z"
                }
            ]
        },
        {
            "version": "v20.0.0.0",
            "name": "sd-card-image-64bits-aarch64.img.xz",
            "description": "The HyperHDR v20 release was created with the participation of many users (thanks to everyone, especially to @astarom) and brings many important new features and fixes. More than several dozen thousand lines of code were changed, including almost the entire application base was rewritten using newer technologies, which then required several months of testing to make sure that it would not negatively affect stability. Thanks to the rebuilt LED rendering model, even more precise refreshing is achieved and the use of Smart Pointers gives us greater control over memory management. Software grabbers have been significantly improved, including hardware acceleration for Pipewire (Linux) and in particular a huge leap in performance and capabilities has occurred in the case of the DirectX grabber for Windows (native system HDR support without LUT and Pixel & Vertex Shader acceleration). At that time, a new [HyperSerialPico](https://github.com/awawa-dev/HyperSerialPico) project was also created, thanks to rp2040 PIO IO co-processor we received a driver offering even more precise timings for LED rendering than ESP32/Esp8266 and it allows the use of ready-made boards with a built-in level shifter: which significantly simplifies the construction of new HyperHDR setups regardless of the platform on which you host it. \r\n\r\nBelow is the full list of changes. Have fun!\r\n\r\nNew features:\r\n- Windows/DirectX: use hardware acceleration (pixel & vertex shaders) for software capturing. <a href=\"https://github.com/awawa-dev/HyperHDR/issues/688\">Fixes issue #688</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Windows/DirectX: autodetect HDR mode.<a href=\"https://github.com/awawa-dev/HyperHDR/issues/690\">Fixes issue #690</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Pipewire DMA & EGL hardware support (Wayland/x11 grabber) <a href=\"https://github.com/awawa-dev/HyperHDR/pull/556\">#556</a>\r\n- Add video buffer memory caching to Pipewire grabber <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Automatic database backup before applying structure changes when installing new version, json backups are saved in standard HyperHDR configuration home directory <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Linux: audio stream auto-resume on EPIPE error <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Ability to change MQTT Topic. <a href=\"https://github.com/awawa-dev/HyperHDR/pull/619\">Fixes issue #619</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- MQTT: auto-resume. <a href=\"https://github.com/awawa-dev/HyperHDR/issues/570\">Fixes issue #570</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- MQTT ability to execute multiply commands in one request. <a href=\"https://github.com/awawa-dev/HyperHDR/issues/642\">Fixes issue #642</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Each MQTT subcommand will return full response in the overall result at HyperHDR/JsonAPI/response <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Colorized logs <a href=\"https://github.com/awawa-dev/HyperHDR/pull/640\">#640</a>\r\n- New device discovery service <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#605</a>\r\n- Add new effect: Rainbow Waves <a href=\"https://github.com/awawa-dev/HyperHDR/pull/607\">#607</a>\r\n- MQTT: hostname address resolver. Thanks @lougovsk <a href=\"https://github.com/awawa-dev/HyperHDR/pull/586\">#586</a>\r\n- New JsonAPI method to calculate average color of selected instance <a href=\"https://github.com/awawa-dev/HyperHDR/pull/611\">#611</a>\r\n- Add automatic LUT downloader & installer <a href=\"https://github.com/awawa-dev/HyperHDR/pull/568\">#568</a>\r\n- Allow LUT calibration when no USB grabber is present <a href=\"https://github.com/awawa-dev/HyperHDR/pull/518\">#518</a>\r\n- New JSON API method to update smoothing parameters <a href=\"https://github.com/awawa-dev/HyperHDR/pull/352\">#352</a>\r\n\r\n\r\nLED devices:\r\n- Smoothing clock is integrated directly within led driver: no more two separated & unsynchronized clocks for smoothing and led driver, also much more precise refresh times. <a href=\"https://github.com/awawa-dev/HyperHDR/discussions/512\">Discussed here</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Add support for Raspberry Pi Pico (Rp2040) HyperSerialPico <a href=\"https://github.com/awawa-dev/HyperHDR/pull/560\">#560</a>\r\n- HyperHDR driver for WLED has been switched to WLED Audio-Reactive-Led-Strip (WARLS) protocol removing old 490 LEDs limit https://github.com/Aircoookie/WLED/wiki/UDP-Realtime-Control \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Yeelight: Wizard now supports more models, workaround for music-mode reset, auto-resume support <a href=\"https://github.com/awawa-dev/HyperHDR/pull/750\">#750</a> Thanks @ratawhisk\r\n- Force HyperSerial detection <a href=\"https://github.com/awawa-dev/HyperHDR/pull/732\">#732</a> Thanks @alex-013\r\n- New features: disable LEDs/components on startup <a href=\"https://github.com/awawa-dev/HyperHDR/pull/737\">#737</a>\r\n- Support for Pico (rp2040) boards using HyperSPI <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Fix over 500LEDs limit for HyperSPI when RPi5 is used <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Add support for HD108 led strip, 16/48bits colors <a href=\"https://github.com/awawa-dev/HyperHDR/pull/527\">#527</a>\r\n- Live update WLED/udpraw LEDs number <a href=\"https://github.com/awawa-dev/HyperHDR/pull/564\">#564</a>\r\n- ArtNet LED Controller: add toggle to prevent pixel color data split across two artnet universes. <a href=\"https://github.com/awawa-dev/HyperHDR/issues/657\">Fixes issue #657</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Workaround for critical Rpi udev bug affecting serial ports <a href=\"https://github.com/awawa-dev/HyperHDR/pull/583\">#583</a>\r\n\r\nCore:\r\n- Refactoring. Migration to C++ Smart Pointers. Move almost all main objects management under control of modern C++ smart pointers, fully control complicated life-cycle and ownership of HyperHDR components <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- New interface: removed ancient Font Awesome 4 (so 2017...) Migrate to SVG: Bootstrap Icons and Google Material Icons/Symbols <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#605</a>\r\n- New features: stop processing when user has locked the system <a href=\"https://github.com/awawa-dev/HyperHDR/pull/737\">#737</a>\r\n- Remove folders nesting <a href=\"https://github.com/awawa-dev/HyperHDR/pull/363\">#363</a>\r\n- Improved headers including for faster compilation <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Pause the USB grabber when all LEDs are off to reduce load <a href=\"https://github.com/awawa-dev/HyperHDR/pull/608\">#608</a>\r\n- Use optional system libs for compiling <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#541</a>\r\n- Do not use TurboJPEG for RGB during calibration <a href=\"https://github.com/awawa-dev/HyperHDR/pull/508\">#508</a>\r\n- Make bonjour use logging utilities. Thanks @nurikk <a href=\"https://github.com/awawa-dev/HyperHDR/pull/529\">#529</a>\r\n- glibc requirements for DEB installer <a href=\"https://github.com/awawa-dev/HyperHDR/pull/402\">#402</a>\r\n\r\nPlatform support:\r\n\r\n- SD images are available again and are based on Debian Bullseye, so they will not fit RPi 5: use the official Raspberry Pi installer for this board. It is explained here: <a href=\"https://github.com/awawa-dev/HyperHDR/issues/699\">link1</a> \r\n- Add native build for Apple M1 / M2 / M3 (arm64) architecture <a href=\"https://github.com/awawa-dev/HyperHDR/pull/755\">#755</a>\r\n- Add Ubuntu support to HyperHDR and Github Pages APT repository <a href=\"https://github.com/awawa-dev/HyperHDR/pull/522\">#522</a>\r\n- Update build scripts and include Ubuntu 24.04 LTS\r\n- Upgrade Fedora 38 to 39, Ubuntu 23.04 to 23.10 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/667\">#667</a>\r\n- Add Arch Linux support <a href=\"https://github.com/awawa-dev/HyperHDR/pull/520\">#520</a>\r\n\r\nUpdates:\r\n- Update language file's. Thanks @AstaRom <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#505</a>\r\n- Upgrade Bootstrap to 5.2.3 / improved 'video live preview' on smartphones <a href=\"https://github.com/awawa-dev/HyperHDR/pull/336\">#336</a>\r\n- Update Github actions/checkout@v3 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/403\">#403</a>\r\n- Update Github actions/download@v3 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/372\">#372</a>\r\n- Update mbedtls to 3.4.0 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/589\">#589</a>\r\n- Update flatbuffers to v23.5.26 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/596\">#596</a>\r\n- Update language file's. Thanks @AstaRom <a href=\"https://github.com/awawa-dev/HyperHDR/pull/617\">#617</a>\r\n- switch libCEC to mainstream since version 6.x is widely available now <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n\r\nBug fixing:\r\n- Windows/DirectX: fix overexposed HDR stream with pixel shader. <a href=\"https://github.com/awawa-dev/HyperHDR/issues/689\">Fixes issue #689</a> \u2192 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Fix: Fedora uses xz as the package name, not xz-utils <a href=\"https://github.com/awawa-dev/HyperHDR/pull/771\">#771</a> Thanks @hsmalley\r\n- Fix LUT loading bug to reduce memory usage by 96MB <a href=\"https://github.com/awawa-dev/HyperHDR/pull/766\">#766</a>\r\n- Fix typo in LED strip name <a href=\"https://github.com/awawa-dev/HyperHDR/pull/670\">#670</a> Thanks @fluchfux\r\n- Fix background music effect <a href=\"https://github.com/awawa-dev/HyperHDR/pull/761\">#761</a>\r\n- Fix typo <a href=\"https://github.com/awawa-dev/HyperHDR/pull/762\">#762</a> Thanks @laurens94\r\n- Fix macOS build <a href=\"https://github.com/awawa-dev/HyperHDR/pull/638\">#638</a> #671 #672\r\n- Fix Linux DBus sleep/wakeup handler\r\n- Fix pipewire grabber for non-contiguous DMA memory & EGL <a href=\"https://github.com/awawa-dev/HyperHDR/pull/711\">#711</a> Thanks @Mic92\r\n- Fixes for v20beta1 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/705\">#705</a>\r\n- Fix logging tab that can be empty when opened and add button to copy logs <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Fix verbose command line option <a href=\"https://github.com/awawa-dev/HyperHDR/pull/723\">#723</a>\r\n- Fixed the LUT calibration page by removing potential scrollbars that could interfere with the final result <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Stability improvements & bug fixing <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#605</a>\r\n- Fix QT5.15 issue when building on Windows <a href=\"https://github.com/awawa-dev/HyperHDR/pull/605\">#605</a>\r\n- Remove depraciated ::set-output from Github Action <a href=\"https://github.com/awawa-dev/HyperHDR/pull/390\">#390</a>\r\n- V4L: allow setting of V4L device input, fixes #537. Thanks @Thinner77 <a href=\"https://github.com/awawa-dev/HyperHDR/pull/540\">#540</a>\r\n- JSON API security vulnerability <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Improved installers script <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Address CodeQL findings <a href=\"https://github.com/awawa-dev/HyperHDR/pull/691\">#691</a>\r\n- Fix chrome/edge fullscreen detection <a href=\"https://github.com/awawa-dev/HyperHDR/pull/519\">#519</a>",
            "published_at": "2024-03-24T00:04:54Z",
            "assets": [
                {
                    "name": "HyperHDR-20.0.0.0-Linux-aarch64.deb",
                    "size": 32639248,
                    "download_count": 2848,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v20.0.0.0/HyperHDR-20.0.0.0-Linux-aarch64.deb",
                    "created_at": "2024-03-24T00:03:55Z",
                    "updated_at": "2024-03-24T00:03:57Z"
                },
                {
                    "name": "HyperHDR-20.0.0.0.bookworm-aarch64.deb",
                    "size": 34121958,
                    "download_count": 219,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v20.0.0.0/HyperHDR-20.0.0.0.bookworm-aarch64.deb",
                    "created_at": "2024-03-24T00:03:55Z",
                    "updated_at": "2024-03-24T00:03:57Z"
                }
            ]
        },
        {
            "version": "v19.0.0.0",
            "name": "sd-card-image-64bits-aarch64.img.xz",
            "description": "I've published new updated build-log on my blog which includes needed components and how to build and configure the entire system. It can be useful even if you already have your system built, as it also includes optimization tips and the possibility to upgrade your setup to a multi-segment configuration.\r\nhttps://www.hyperhdr.eu/2023/02/ultimate-guide-on-how-to-build-led.html\r\n\r\n**New features:**\r\n- Added support for entertainment api v2 (hue gradient strips) ( #471)  Many thanks to @gibahjoe great job! **Tutorial is here:** [link](https://github.com/awawa-dev/HyperHDR/discussions/512)\r\n- HyperHDR got new packages repository (Github Pages). More details: https://awawa-dev.github.io/ <ins>Also RPM and Arch Linux installers are available there.</ins>\r\n- The SD images that come with this release are already linked to the HyperHDR repository, so a future update should be much simpler.\r\n- Add support for ESP32-S2 mini board. It requires latest HyperSerialESP32 v9 . This firmware brings also support for parallel multi-segments, that allows to double the refresh rate of large sk6812/ws2812b setups for free (a proper LED strip design is required)\r\n- ESP8266/ESP32 handshake for the AWA Adalight ( #432)  \r\n- Save/restore WLED state and set max brightness at startup ( #353) \r\n- Adalight: auto-resume and ESP8266/ESP32 auto-discovery ( #494) \r\n- Add support for utv007 / Linux ( #423) \r\n- LED strip designer context menu incl. blink selected LED, zoom, edit, move, disable, delete single LED (more:  [#379](https://github.com/awawa-dev/HyperHDR/pull/379))\r\n- Modifiable SPI path with device auto-detection (more: [#346](https://github.com/awawa-dev/HyperHDR/pull/346)) \r\n- Flatbuffers: multiple custom LUT files support (more: [#334](https://github.com/awawa-dev/HyperHDR/pull/334)) \r\n  \r\n**Fix:**\r\n- Automatic signal detection timing (#410) \r\n- Fix the black color for disabled LEDs (#419) \r\n- Fix: critical unicolor averaging bug causing very dark colors (more: [#379](https://github.com/awawa-dev/HyperHDR/pull/379))\r\n- Fix: web LED live simulator doesn't update (more: [#337](https://github.com/awawa-dev/HyperHDR/pull/337))\r\n- Fix: Improved HyperHDR web server startup (more: [#351](https://github.com/awawa-dev/HyperHDR/pull/351)) \r\n- Fix: Restore support for ZasLuke Capture card (more: [#335](https://github.com/awawa-dev/HyperHDR/pull/335)) \r\n- Fix: Philips Hue: do not treat stream errors as critical when retrying\r\n- Align SPI buffer for HyperSPI to 4 bytes\r\n- Fix: Use longer reset pulse (#468) Thanks @nurikk \r\n  \r\n**Improvements:**\r\n- Improved LED device performance (dropping frames that have exceeded the hardware capabilities of the LED device, UDP/SPI devices are not affected as the process is handled by the OS)\r\n- Update de.json (#411) Thanks @Duese123\r\n- Update nl.json (#491)  Thanks @NicoLouis-be \r\n- Update Github actions/upload@v3 (#373) \r\n-  Unified internal clocks (more: [#355](https://github.com/awawa-dev/HyperHDR/pull/355)) \r\n-  Colored cmake output (more: [#364](https://github.com/awawa-dev/HyperHDR/pull/364)) \r\n-  Support for precompiled headers (more: [#359](https://github.com/awawa-dev/HyperHDR/pull/359)) \r\n-  Improved REST API network driver (WLED, Philips Hue etc) (more: [#354](https://github.com/awawa-dev/HyperHDR/pull/354)) \r\n-  Github Action: upgrade runner to macos-12 (more: [#341](https://github.com/awawa-dev/HyperHDR/pull/341)) \r\n-  Update actions/cache@v3 (more: [#371](https://github.com/awawa-dev/HyperHDR/pull/371)) ",
            "published_at": "2023-02-12T19:01:27Z",
            "assets": [
                {
                    "name": "HyperHDR-19.0.0.0-Linux-aarch64.deb",
                    "size": 33306056,
                    "download_count": 3098,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v19.0.0.0/HyperHDR-19.0.0.0-Linux-aarch64.deb",
                    "created_at": "2023-02-12T18:21:19Z",
                    "updated_at": "2023-02-12T18:21:22Z"
                }
            ]
        },
        {
            "version": "v18.0.0.0",
            "name": "sd-card-image-18.0.0.0-armv7l.img.xz",
            "description": "Changelog (v18 key highlights can be found on the HyperHDR blog [link](https://www.hyperhdr.eu/2022/08/hyperhdr-v18-release.html) ) \r\n  \r\n**New features**:  \r\n- Registering HyperHDR services with the MQTT broker \r\n- System event support: hibernation/sleep/wake up/resume\r\n- WLED Configuration Wizard can discover WLED devices on the network\r\n- Added WLED auto-resume initialization and improved existing Philips Hue auto-resume feature\r\n- Reworked network discovery service and added Windows support\r\n- Frame Buffer software screen grabber (Linux) \r\n- New config option to fix static flickering for DX11 grabber (#275)\r\n- Improved Philips Hue wizard\r\n- Protocol buffers HDR tone mapping (mainly for Android Screen Grabber #263)\r\n- Replaced protobuf with a lightweight nanopb library\r\n- Limit for software screen grabbers increased to 60FPS\r\n- New software grabber for Linux: Wayland (pipewire/portal). Support for Ubuntu 22.04 LTS!\r\n- Wayland grabber: support for pipewire/portal protocol version 4 persistent authentication\r\n- [New fully automatic LUT calibration for HDR/SDR/YUV](https://www.hyperhdr.eu/2022/04/usb-grabbers-hdr-to-sdr-quality-test.html)\r\n- New set of dedicated LUT tables for supported grabbers\r\n- 30% improved performance for MJPEG HDR mode \r\n- Add white channel calibration for RGBW led strips and latest HyperSerialEsp8266/HyperSerialESP32/HyperSPI ([Adalight](https://i.postimg.cc/hv9366VD/calib1.jpg) [HyperSPI](https://i.postimg.cc/kGdTQszk/calib2.jpg)) \r\n- New dynamic video cache buffers (improved performance, fixes [#142](https://github.com/awawa-dev/HyperHDR/issues/142)) \r\n- Performance information panel in the overview tab \r\n    - CPU performance and RAM usage (excluding Apple M1) \r\n    - CPU temperature reading (Linux only, when the sensor is present)\r\n    - Under-voltage detection (Raspberry Pi OS only) \r\n    - USB grabber performance (shows framerate and latency)\r\n    - Instance input images to LED colors performance\r\n    - LED device output performance\r\n- New JSON API function to control USB grabber: brightness, contrast, saturation, hue\r\n- USB grabber latency benchmark ([link](https://www.hyperhdr.eu/2021/10/usb-grabbers-grand-latency-test-part-i.html))\r\n- HDR tone mapping for flatbuffers ([PR #215](https://github.com/awawa-dev/HyperHDR/pull/215) thanks @chbartsch)\r\n- Dynamic LED layout resize on the container size changed \r\n- Improved and refactored LED devices model and communication \r\n- Flatbuffers: HDR tone mapping can use alternative filename: *flat_lut_lin_tables.3d* \r\n- FlatBuffers: add support for high performance local sockets ([link](https://github.com/awawa-dev/HyperHDR/commit/1100093068196a53eff5f856f0eaaf8e43ca229f)) \r\n- The new build scheme allows graberless configuration and usage of external toolchains \r\n- Add popular 'UDP raw' (WLED compatible) receiver for HyperHDR ([link1](https://i.postimg.cc/RV4PqPct/udpraw.jpg) [link2](https://github.com/awawa-dev/HyperHDR/commit/5fb1be1c4bdbc84becfd964a08cb106482b6c4e5)) \r\n  \r\n**Bug Fixing**:  \r\n- Fix variuos memory leaks reported by diagnostic tools\r\n- Fix Philips Hue reconnection issues\r\n- Synchronize interface to FlatBuffers HDR state when no USB grabbers are present in the build\r\n- Fix for DirectX11 grabber secondary monitor capturing (fixes #223)\r\n- Fix translations for parametrized items. Germany resources corrected (thanks @tuxuser)\r\n- Fix for broken LED raw JSON editor (fixes #235)\r\n- Fix looped communication in the remote tab\r\n- Fix restart issue of X11 software screen grabber (fixes #167)\r\n- Fix LED devices on/off race condition\r\n- Fix saving Yeelight configuration (fixes #133)\r\n- Fix inter-thread communication\r\n- Fix saving changed Philips Hue configuration\r\n- Fix LED devices state synchronization\r\n- Fix invoking setting static color from the system menu\r\n- Ignore Bluetooth devices during Adalight auto-discovery\r\n- ProviderRestApi and ProviderUdpSSL are rewritten to fix variuos related issues\r\n- ProviderUdpSSL (Philips Hue) ability to resume the connection when the communication stream is broken\r\n- Fix for the undervoltage detection for newer Raspberry Pi OS\r\n  \r\n**Improvements**:  \r\n- Migration from Pi-gen to CustomPiOS (Rpi SD images)\r\n- Utilizing and migration to C++ smart pointers\r\n- Move the flatbuffer server to separate thread\r\n- Upgrade MBEDTLS to version 3.1\r\n- Upgrade FlatBuffers to version 2.0.0\r\n- Switch to mainline libjpegturbo 2.x\r\n- Use prebuild protobuf compiler for Windows or the system library for other targets\r\n- Updated rpi_ws281x library\r\n- Windows and macOS releases are using QT6.2 LTS\r\n- Windows: migrate the solution and documentation to Visual Studio 2022\r\n- Removed: tinkerforge and USB-HID support\r\n- Removed: LED device latch time\r\n\r\n**Community**:\r\n- mjoshd Home Assistant HyperHDR integration plugin https://github.com/mjoshd/hyperhdr-ha\r\n- appleimperio docker compose file for aarch64 https://github.com/appleimperio/docker-hyperhdr\r\n- ihrapsa HA plugin to install HyperHDR https://github.com/ihrapsa/hassio-addons",
            "published_at": "2022-08-21T17:16:25Z",
            "assets": [
                {
                    "name": "HyperHDR-18.0.0.0-Linux-aarch64.deb",
                    "size": 33338530,
                    "download_count": 1131,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v18.0.0.0/HyperHDR-18.0.0.0-Linux-aarch64.deb",
                    "created_at": "2022-08-21T14:47:38Z",
                    "updated_at": "2022-08-21T14:47:42Z"
                }
            ]
        },
        {
            "version": "v17.0.0.0",
            "name": "sd-card-image-rpi34-armv7.zip",
            "description": "This is the most important HyperHDR update to date, bringing new features, fixes, and changes to:  UI, video processing, JSON API, translation resources, software screen grabbers and LED drivers. SD card OS images include new AARCH64 version for Raspberry Pi 2 (rev. 1.2), 3 and 4 as tests showed performance improvements compared to the 32-bit armv7l.   \r\n  \r\nChangelog (v17 key highlights can be found on the HyperHDR blog [link](https://hyperhdr.blogspot.com/2021/08/hyperhdr-v17beta-preview.html) ):\r\n\r\n- fix for default LUT table for both SDR (yuv/nv12/i420) and HDR video stream: BT2020 color space matrix multiplication bug, truncating values to the allowed range and apply proper processing order. First & major LUT table update since v14 **(important: included after v17 beta2 so testers need to upgrade HyperHDR and recalibrate automatic signal detection if used)**\r\n- upgrade ancient Bootstrap 3 to version 5 (the core of the user interface)\r\n- replace and update most of UI components, new layout [picture1](https://i.postimg.cc/9QXhFkjt/white1.jpg), [picture2](https://i.postimg.cc/wB7YDsM1/white2.jpg), [picture3](https://i.postimg.cc/Mps8cY6k/white3.jpg), [picture4](https://i.postimg.cc/SNh4HsTP/black1.jpg), [picture5](https://i.postimg.cc/RVLmmB2Z/black2.jpg), [picture6](https://i.postimg.cc/d0pP6tZ4/black3.jpg)\r\n- software screen grabbers (Windows: DirectX11 / Linux:X11 / macOS:CoreGraphics) [pictureWin](https://i.postimg.cc/SNrB5GzX/screen-dx.jpg)\r\n[pictureLin](https://i.postimg.cc/y88MzSFL/screen-x11.jpg) [pictureMac](https://i.postimg.cc/ZKwKyQhH/screen-macos.png) #46\r\n- automatic signal detection with smart learning capability for USB grabbers (you can have only one algorithm enabled at the time: automatic one or the old, difficult to setup and  unreliable manual one) [picture1](https://i.postimg.cc/zfW0mJPd/automatic1.jpg) [picture2](https://i.postimg.cc/JnLKM9fR/automatic2.jpg) [picture3](https://i.postimg.cc/63fc3MKn/automatic3.jpg) [picture4](https://i.postimg.cc/4y81vnm3/automatic4.jpg) [picture5](https://i.postimg.cc/5y93F89G/automatic5.jpg) [picture6](https://i.postimg.cc/G3zzngq1/automatic6.jpg)\r\n- new feature: auto-resume option for video grabbers when capturing stops for some reason (for example: changing the resolution or refresh rate of the incoming video stream)  [picture1](https://i.postimg.cc/MK0cb9LP/auto-resume.png)\r\n- re-implemented backup import / export function for ALL instances settings in place of the old functionality that clumsily imitated creating of backups, which in many cases resulted in data loss [picture1](https://i.postimg.cc/j2jHjKZY/backup.jpg)\r\n- current video stream information in the 'overview' tab [picture1](https://i.postimg.cc/tCw39K68/overview.jpg)\r\n- support for my new HyperSPI project (https://github.com/awawa-dev/HyperSPI) with awa_spi LED driver [picture1](https://postimg.cc/sMVB09LC)\r\n- new video stream crop method in JSON API [picture1](https://i.postimg.cc/ZqFpF0Qh/crop.jpg) #64 \r\n- JSON API documentation in a form of live playground in 'Advanced' tab [picture1](https://i.postimg.cc/RFp3XtQ2/api.jpg)\r\n- new feature: execute multiple JSON commands via GET request using single link [picture1](https://i.postimg.cc/XJF7DNVb/multicommand.png)\r\n- LED grouping aka PC mode aka gradient mode, can help with eye fatigue when used with the monitor, each LED in the group has same average color [picture1](https://i.postimg.cc/pV9Q3VhK/gradient.jpg), you can even improve the effect with the anti-flickering filter with threshold set to 255\r\n- add timeout for the anti-flickering filter [picture1](https://i.postimg.cc/Gt04WCVj/timeout.jpg)\r\n- fix: in specific cases some devices could not react to 'no-signal' when it's triggered\r\n- translation resources are updated\r\n- new panel for easy video resolution & refresh mode selection [picture1](https://i.postimg.cc/d0xk9d9p/button.jpg) [picture2](https://i.postimg.cc/cHtKkH9H/panel.jpg)\r\n- add release for AARCH64 architecture #68 **PERFORMANCE INCREASED UP to 30% COMPARED to Rpi 32bits**: [32bit 1280](https://i.postimg.cc/Kz1c5MC1/rpi3-32bit-1280-720-17ms.png) [32bit 1920](https://i.postimg.cc/sfZDQ5p8/rpi3-32bit-1920-1080-38ms.png) [64bit 1280](https://i.postimg.cc/XqFVR0j3/rpi3-64bit-1280-720-12ms.png) [64bit 1920](https://i.postimg.cc/Px0XVqk2/rpi3-64bit-1920-1080-26ms.png)\r\n- fix for WLED new network protocol #90\r\n- HDR tone mapping is available as a global component [picture1](https://i.postimg.cc/t4g4mJ7j/compHDR1.jpg) [picture2](https://i.postimg.cc/RZbZrmnn/compHDR2.jpg) [picture3](https://i.postimg.cc/6Q25tPdb/compHDR3.jpg)\r\n- new feature: add list of available COM ports for the adalight driver [picture1](https://i.postimg.cc/FsPdSRzW/adalight.png)\r\n- removed redundant default JSON config in favour of JSON Schemas defaults\r\n- fix missing Linux taskbar icon\r\n- support for libCEC 6.0.2 to turn on/off video & system grabber [picture1](https://i.postimg.cc/NfM33H8p/control.jpg)\r\n- support for libCEC to turn on/off HDR tone mapping with remote buttons (CEC or libCEC is quite buggy here and dependent on the hardware, with LG C9 must restart TV to make them work) [picture1](https://i.postimg.cc/gkTCm2Nd/buttons.jpg)\r\n- HyperHDR is ready for QT6.2 (tested with the preview version/Vulkan/Windows)\r\n- lower CPU usage when automatic signal detection triggers 'nosignal' ('save resources' for software framerate decimation) [picture1](https://i.postimg.cc/wMPw87HG/save.jpg) #93\r\n- standardize libJPEG-turbo library (where it's necessary)\r\n- fix values premature clipping in the LUT generator & SDR preview rendering fix, access available now from the menu ('Advanced' tab)\r\n- suppress most of external components' warnings while building\r\n- faster image to LED colors transformation\r\n- import 'sparks' and 'system shutdown' effects to the new effect API #75\r\n- upgrade: rpi_ws281x library\r\n- better logging with instances' indexes\r\n- fixed power saving issue in macOS version\r\n- fixed memory leaks in SPI drivers\r\n- Boblight changed from built-in to optional component\r\n",
            "published_at": "2021-09-15T15:53:26Z",
            "assets": [
                {
                    "name": "HyperHDR-17.0.0.0-Linux-aarch64.deb",
                    "size": 32800546,
                    "download_count": 2216,
                    "browser_download_url": "https://github.com/awawa-dev/HyperHDR/releases/download/v17.0.0.0/HyperHDR-17.0.0.0-Linux-aarch64.deb",
                    "created_at": "2021-09-15T17:13:22Z",
                    "updated_at": "2021-09-15T17:13:25Z"
                }
            ]
        }
    ],
    "created_at": 1746898414.7578292
}